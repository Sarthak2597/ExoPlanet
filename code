from google.colab import drive
drive.mount('/content/drive/')
import pandas as pd
import tensorflow as tf
from keras.models import Sequential
from keras.layers import Dense
df=pd.read_csv('/content/drive/My Drive/Colab Notebooks/ExoPlanet/exoTrain.csv') #uploading the data
df1 = df.sample(frac=1).reset_index(drop=True) #randomly shuffling the rows of the dataframe
df2=df1.iloc[:,1:] #dropping the column"LABEL"
training_df = df2.div(df.sum(axis=1), axis=0) #Normalizing the data
labels=df1.iloc[:,0] 
labels=labels.map({2:1,1:0}) #mapping the value 2 as 1 and 1 as 0
model=Sequential() #initialising the neural network
model.add(Dense(1000, input_dim=3197, activation='sigmoid'))
model.add(Dense(100, activation='relu'))
model.add(Dense(1, activation='sigmoid'))
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
model.fit(training_df, labels, epochs=50, batch_size=50)
test1=pd.read_csv('/content/drive/My Drive/Colab Notebooks/ExoPlanet/exoTest.csv') #uploading the testing data
test1 = test1.sample(frac=1).reset_index(drop=True) #shuffling the rows
test=test1.iloc[:,1:]
expected=test1.iloc[:,0]
expected=expected.map({2:1,1:0}) #mapping the value 2 as 1 and 1 as 0
predictions=model.predict(test)#make probability predictions with the model
rounded=[round(x[0]) for x in predictions] #round-off predictions
print('expected ==> predictions')
iter=0 #initialising the variable 'iter' as 0
for i in range(0,570):
  print(expected[i],"==>",rounded[i])
  if (expected[i]==rounded[i]):
    iter=iter+1
print(iter) #printing the number of times our prediction turned out to be true
